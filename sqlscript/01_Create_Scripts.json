{
	"name": "01_Create_Scripts",
	"properties": {
		"folder": {
			"name": "Creation Scripts"
		},
		"content": {
			"query": "-- Check if the database 'nyc_taxi_ldw' does exisT, then first drop the db.\nuse master\nGO\n\nIF EXISTS(SELECT * FROM sys.databases WHERE name = 'nyc_taxi_ldw')\n    BEGIN\n        DROP DATABASE nyc_taxi_ldw\n    END\n\nGO\n\n-- Check if the database 'nyc_taxi_ldw' does not exist, create the db.\nIF NOT EXISTS(SELECT * FROM sys.databases WHERE name = 'nyc_taxi_ldw')\n    BEGIN\n        CREATE DATABASE nyc_taxi_ldw\n    END\n\nGO\n\n-- Check if the 'nyc_taxi_ldw' database exists and then alter the schema to add right collation to the database utf-8.\nIF EXISTS(SELECT * FROM sys.databases WHERE name = 'nyc_taxi_ldw')\nBEGIN\n    Alter DATABASE nyc_taxi_ldw COLLATE Latin1_General_100_CI_AI_SC_UTF8\nEND\nGo\n\n\n-- Create external data source in nyc_taxi_ldw\nUSE nyc_taxi_ldw\nGO\n\n-- Check if the 'bronze' schema exists\nIF NOT EXISTS (SELECT * FROM sys.schemas WHERE name = 'bronze')\nBEGIN\nEXEC ('CREATE SCHEMA bronze')\nEND\nGO\n\n-- Check if the 'silver' schema exists\nIF NOT EXISTS (SELECT name FROM sys.schemas WHERE name = 'silver')\nBEGIN\n    EXEC ('CREATE SCHEMA silver')\nEND\nGO\n\n-- Check if the 'gold' schema exists\nIF NOT EXISTS (SELECT name FROM sys.schemas WHERE name = 'gold')\nBEGIN\n    EXEC ('CREATE SCHEMA gold')\nEND\nGO\n\n-- Create the external data source pointing to ADLS\nIF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'nyc_data_raw')\nCREATE EXTERNAL DATA SOURCE nyc_data_raw\nWITH\n(\n    Location = 'https://devsynapseaccount01.dfs.core.windows.net/nyc-taxi-dataset'\n)\nGO\n\n-- Create the external file format pointing to ADLS\n\nIF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'csv_file_formats')\nCREATE EXTERNAL FILE FORMAT csv_file_formats\nWITH\n(\n    FORMAT_TYPE = DELIMITEDTEXT,\n    FORMAT_OPTIONS(\n        FIELD_TERMINATOR = ','\n        ,STRING_DELIMITER = '\"'\n        ,FIRST_ROW = 2\n        ,USE_TYPE_DEFAULT = FALSE\n        ,ENCODING = 'UTF8'\n        ,PARSER_VERSION = '2.0'\n    )\n)\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name ='tsv_file_format')\n  CREATE EXTERNAL FILE FORMAT tsv_file_format  \n  WITH (  \n      FORMAT_TYPE = DELIMITEDTEXT,\n      FORMAT_OPTIONS (  \n        FIELD_TERMINATOR = '\\t'  \n      , STRING_DELIMITER = '\"'\n      , First_Row = 2\n      , USE_TYPE_DEFAULT = FALSE \n      , Encoding = 'UTF8'\n      , PARSER_VERSION = '2.0' )   \n      )\nGO\n\n-- Create file format tsv_file_format for parser version 1.0\nIF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name ='tsv_file_format_pv1')\n  CREATE EXTERNAL FILE FORMAT tsv_file_format_pv1 \n  WITH (  \n      FORMAT_TYPE = DELIMITEDTEXT,\n      FORMAT_OPTIONS (  \n        FIELD_TERMINATOR = '\\t'  \n      , STRING_DELIMITER = '\"'\n      , First_Row = 2\n      , USE_TYPE_DEFAULT = FALSE \n      , Encoding = 'UTF8'\n      , PARSER_VERSION = '1.0' )   \n      )\nGO\n\n-- Create external file format for parquet_file_format\nIF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name ='parquet_file_format')\n  CREATE EXTERNAL FILE FORMAT parquet_file_format  \n  WITH (  \n        FORMAT_TYPE = PARQUET,  \n        DATA_COMPRESSION = 'org.apache.hadoop.io.compress.SnappyCodec'  \n       )\nGO \n\n\n-- Create external file format for delta_file_format\nIF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name ='delta_file_format')\n  CREATE EXTERNAL FILE FORMAT delta_file_format  \n  WITH (  \n        FORMAT_TYPE = DELTA,  \n        DATA_COMPRESSION = 'org.apache.hadoop.io.compress.SnappyCodec'  \n       )\nGO\n\n-- Create the external file format pointing to ADLS for PARSER_VERSION 1.0\nIF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'csv_file_formats_pv1')\nCREATE EXTERNAL FILE FORMAT csv_file_formats_pv1\nWITH\n(\n    FORMAT_TYPE = DELIMITEDTEXT,\n    FORMAT_OPTIONS(\n        FIELD_TERMINATOR = ','\n        ,STRING_DELIMITER = '\"'\n        ,FIRST_ROW = 2\n        ,USE_TYPE_DEFAULT = FALSE\n        ,ENCODING = 'UTF8'\n        ,PARSER_VERSION = '1.0'\n    )\n)\nGO\n\n-- create the external taxi zone table.\nIF OBJECT_ID('bronze.taxi_zone') is NOT NULL\n    DROP EXTERNAL TABLE bronze.taxi_zone\nGO\nCREATE EXTERNAL TABLE bronze.taxi_zone\n(\n    location_id SMALLINT,\n    brough VARCHAR(15),\n    zone VARCHAR(50),\n    service_zone VARCHAR(15)\n\n)\nWITH (\n    LOCATION = 'raw/taxi_zone.csv',\n    DATA_SOURCE = nyc_data_raw,\n    FILE_FORMAT = csv_file_formats,\n    REJECT_VALUE = 1,\n    REJECTED_ROW_LOCATION = 'rejections/taxi_zone'\n)\nGO\n\n\n\nIF OBJECT_ID('bronze.calendar') is NOT NULL\n    DROP EXTERNAL TABLE bronze.calendar\nGO\n\n-- create the external calendar table.\nCREATE EXTERNAL TABLE bronze.calendar\n(\n        date_key INT,\n        date date,\n        year smallint,\n        month smallint,\n        day smallint,\n        day_name varchar(15),\n        day_of_year smallint,\n        week_of_month smallint,\n        week_of_year smallint,\n        month_name VARCHAR(15)\n)\nWITH (\n    LOCATION = 'raw/calendar.csv',\n    DATA_SOURCE = nyc_data_raw,\n    FILE_FORMAT = csv_file_formats,\n    REJECT_VALUE = 1,\n    REJECTED_ROW_LOCATION = 'rejections/calendar'\n)\nGO\n\n\n-- Create view for rate code file\nDROP VIEW IF EXISTS bronze.vw_rate_code\nGO\n\n\nCREATE VIEW bronze.vw_rate_code\nAS\nSELECT rate_code_id, rate_code\n  FROM OPENROWSET(\n      BULK 'raw/rate_code.json',\n      DATA_SOURCE = 'nyc_data_raw',\n      FORMAT = 'CSV',\n      FIELDTERMINATOR = '0x0b',\n      FIELDQUOTE = '0x0b',\n      ROWTERMINATOR = '0x0b'\n  )\n  WITH\n  (\n      jsonDoc NVARCHAR(MAX)\n  ) AS rate_code\n  CROSS APPLY OPENJSON(jsonDoc)\n  WITH(\n      rate_code_id TINYINT,\n      rate_code VARCHAR(20) \n  )\nGO\n\n-- Create view for payment type file\nDROP VIEW IF EXISTS bronze.vw_payment_type\nGO\n\nCREATE VIEW bronze.vw_payment_type\nAS\nSELECT payment_type, description\n  FROM OPENROWSET(\n      BULK 'raw/payment_type.json',\n      DATA_SOURCE = 'nyc_data_raw',\n      FORMAT = 'CSV',\n      FIELDTERMINATOR = '0x0b',\n      FIELDQUOTE = '0x0b'\n  )\n  WITH\n  (\n      jsonDoc NVARCHAR(MAX)\n  ) AS payment_type\n  CROSS APPLY OPENJSON(jsonDoc)\n  WITH(\n      payment_type SMALLINT,\n      description VARCHAR(20) '$.payment_type_desc'\n  )\nGO\n\n\n-- Create view for trip_data_green\nDROP VIEW IF EXISTS bronze.vw_trip_data_green_csv\nGO\n\nCREATE VIEW bronze.vw_trip_data_green_csv\nAS\nSELECT\n    result.filepath(1) AS year,\n    result.filepath(2) AS month,\n    result.*\nFROM\n    OPENROWSET(\n        BULK 'raw/trip_data_green_csv/year=*/month=*/*.csv',\n        DATA_SOURCE = 'nyc_data_raw',\n        FORMAT = 'CSV',\n        PARSER_VERSION = '2.0',\n        HEADER_ROW = TRUE\n    )\n    WITH (\n      VendorID INT,\n        lpep_pickup_datetime datetime2(7),\n        lpep_dropoff_datetime datetime2(7),\n        store_and_fwd_flag CHAR(1),\n        RatecodeID INT,\n        PULocationID INT,\n        DOLocationID INT,\n        passenger_count INT,\n        trip_distance FLOAT,\n        fare_amount FLOAT,\n        extra FLOAT,\n        mta_tax FLOAT,\n        tip_amount FLOAT,\n        tolls_amount FLOAT,\n        ehail_fee INT,\n        improvement_surcharge FLOAT,\n        total_amount FLOAT,\n        payment_type INT,\n        trip_type INT,\n        congestion_surcharge FLOAT\n  ) AS [result]\nGO\n\n\n\nIF OBJECT_ID('bronze.vendor') IS NOT NULL\n    DROP EXTERNAL TABLE bronze.vendor;\n\nCREATE EXTERNAL TABLE bronze.vendor\n    (\n        vendor_id       TINYINT,\n        vendor_name     VARCHAR(50)\n    )  \n    WITH (\n        LOCATION = 'raw/vendor.csv',  \n        DATA_SOURCE = nyc_data_raw,  \n        FILE_FORMAT = csv_file_formats_pv1,\n        REJECT_VALUE = 10,\n        REJECTED_ROW_LOCATION = 'rejections/vendor'\n    );\n\n\n-- Create trip_type table\nIF OBJECT_ID('bronze.trip_type') IS NOT NULL\n    DROP EXTERNAL TABLE bronze.trip_type;\n\nCREATE EXTERNAL TABLE bronze.trip_type\n    (\n        trip_type       TINYINT,\n        trip_type_desc  VARCHAR(50)\n    )  \n    WITH (\n        LOCATION = 'raw/trip_type.tsv',  \n        DATA_SOURCE = nyc_data_raw,  \n        FILE_FORMAT = tsv_file_format_pv1,\n        REJECT_VALUE = 10,\n        REJECTED_ROW_LOCATION = 'rejections/trip_type'\n    );\n\n\n\nIF OBJECT_ID('bronze.trip_data_green_parquet') IS NOT NULL\n    DROP EXTERNAL TABLE bronze.trip_data_green_parquet;\n\nCREATE EXTERNAL TABLE bronze.trip_data_green_parquet\n    (\n        VendorID INT,\n        lpep_pickup_datetime datetime2(7),\n        lpep_dropoff_datetime datetime2(7),\n        store_and_fwd_flag CHAR(1),\n        RatecodeID INT,\n        PULocationID INT,\n        DOLocationID INT,\n        passenger_count INT,\n        trip_distance FLOAT,\n        fare_amount FLOAT,\n        extra FLOAT,\n        mta_tax FLOAT,\n        tip_amount FLOAT,\n        tolls_amount FLOAT,\n        ehail_fee INT,\n        improvement_surcharge FLOAT,\n        total_amount FLOAT,\n        payment_type INT,\n        trip_type INT,\n        congestion_surcharge FLOAT\n    )  \n    WITH (\n        LOCATION = 'raw/trip_data_green_parquet/**',\n        DATA_SOURCE = nyc_data_raw,   \n        FILE_FORMAT = parquet_file_format\n    );\n\n\n-- Create trip_data_green_delta table\nIF OBJECT_ID('bronze.trip_data_green_delta') IS NOT NULL\n    DROP EXTERNAL TABLE bronze.trip_data_green_delta;\n\nCREATE EXTERNAL TABLE bronze.trip_data_green_delta\n    (\n        VendorID INT,\n        lpep_pickup_datetime datetime2(7),\n        lpep_dropoff_datetime datetime2(7),\n        store_and_fwd_flag CHAR(1),\n        RatecodeID INT,\n        PULocationID INT,\n        DOLocationID INT,\n        passenger_count INT,\n        trip_distance FLOAT,\n        fare_amount FLOAT,\n        extra FLOAT,\n        mta_tax FLOAT,\n        tip_amount FLOAT,\n        tolls_amount FLOAT,\n        ehail_fee INT,\n        improvement_surcharge FLOAT,\n        total_amount FLOAT,\n        payment_type INT,\n        trip_type INT,\n        congestion_surcharge FLOAT\n    )  \n    WITH (\n        LOCATION = 'raw/trip_data_green_delta',\n        DATA_SOURCE = nyc_data_raw,   \n        FILE_FORMAT = delta_file_format\n    );\n\n\nIF OBJECT_ID('bronze.trip_data_green_csv') IS NOT NULL\n    DROP EXTERNAL TABLE bronze.trip_data_green_csv;\nCREATE EXTERNAL TABLE bronze.trip_data_green_csv\n(\n      VendorID INT,\n        lpep_pickup_datetime datetime2(7),\n        lpep_dropoff_datetime datetime2(7),\n        store_and_fwd_flag CHAR(1),\n        RatecodeID INT,\n        PULocationID INT,\n        DOLocationID INT,\n        passenger_count INT,\n        trip_distance FLOAT,\n        fare_amount FLOAT,\n        extra FLOAT,\n        mta_tax FLOAT,\n        tip_amount FLOAT,\n        tolls_amount FLOAT,\n        ehail_fee INT,\n        improvement_surcharge FLOAT,\n        total_amount FLOAT,\n        payment_type INT,\n        trip_type INT,\n        congestion_surcharge FLOAT\n)\nWITH (\n    LOCATION = 'raw/trip_data_green_csv/year=*/month=*/*.csv',\n    DATA_SOURCE = nyc_data_raw,\n    FILE_FORMAT = csv_file_formats,\n    REJECT_VALUE = 1,\n    REJECTED_ROW_LOCATION = 'rejections/trip_data_green_csv'\n)\nGO\n",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "nyc_taxi_ldw",
				"poolName": "Built-in"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}